import {C_Start,IC_S5, executeProtocol, C_End, messages} from './C';
import {REQUESTL,HOST,USERA,ACCEPT,ACCEPTL,ACCEPTE,DNT,CONNECTION,UPGRADEIR,BODY,HTTPV,HTTP200,HTTP404,DATE,SERVER,STRICTTS,LASTM,ETAG,ACCEPTR,CONTENTL,VARY,CONTENTT,VIA} from './Message';

async function protocol(s1:C_Start):Promise<C_End> {
   const t1 = await s1.send_REQUESTL_to_S(new REQUESTL('request tl'));
   const t2 = await t1.send_HOST_to_S(new DNT('localhost'));
   const t3 = await t2.send_USERA_to_S(new UPGRADEIR('mr. client'));
   const t4 = await t3.send_ACCEPT_to_S(new ACCEPT('accepter'));
   const t5 = await t4.send_BODY_to_S(new BODY('the body of the message'));
   const t6 = await t5.recv();
   console.log(`The received http version from the client is : ${t6.message.value}`);
   const t7 = await t6.recv();
   console.log(`The http response gave following code : ${t7.message.value}`);
   let t8 = await t7.recv();
   while (t8.messageType !== messages.BODY){
      console.log(`a ${t8.messageType} received from ${t8.messageFrom}`);
      t8 = await t8.recv();
   }
   const t9 = t8;
   console.log(`eindstate heeft body : ${t9.message.value}`);
   return new Promise( resolve => resolve( t9 ) );
}

async function start(){
   await executeProtocol(protocol,'localhost',30001);
}

start();
